
IEEEexample.bib 
V1.12 (2007/01/11)
Copyright (c) 2002-2007 by Michael Shell
See: http://www.michaelshell.org/
for current contact information.

This is an example BibTeX database for the official IEEEtran.bst
BibTeX style file.

Some entries call strings that are defined in the IEEEabrv.bib file.
Therefore, IEEEabrv.bib should be loaded prior to this file. 
Usage: 

\bibliographystyle{./IEEEtran}
\bibliography{./IEEEabrv,./IEEEexample}


Support sites:
http://www.michaelshell.org/tex/ieeetran/
http://www.ctan.org/tex-archive/macros/latex/contrib/IEEEtran/
and/or
http://www.ieee.org/

*************************************************************************
Legal Notice:
This code is offered as-is without any warranty either expressed or
implied; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE! 
User assumes all risk.
In no event shall IEEE or any contributor to this code be liable for
any damages or losses, including, but not limited to, incidental,
consequential, or any other damages, resulting from the use or misuse
of any information contained here.

All comments are the opinions of their respective authors and are not
necessarily endorsed by the IEEE.

This work is distributed under the LaTeX Project Public License (LPPL)
( http://www.latex-project.org/ ) version 1.3, and may be freely used,
distributed and modified. A copy of the LPPL, version 1.3, is included
in the base LaTeX documentation of all distributions of LaTeX released
2003/12/01 or later.
Retain all contribution notices and credits.
** Modified files should be clearly indicated as such, including  **
** renaming them and changing author support contact information. **

File list of work: IEEEabrv.bib, IEEEfull.bib, IEEEexample.bib,
                   IEEEtran.bst, IEEEtranS.bst, IEEEtranSA.bst,
                   IEEEtranN.bst, IEEEtranSN.bst, IEEEtran_bst_HOWTO.pdf
*************************************************************************


Note that, because the example references were taken from actual IEEE
publications, these examples do not always contain the full amount
of information that may be desirable (for use with other BibTeX styles).
In particular, full names (not abbreviated with initials) should be
entered whenever possible as some (non-IEEE) bibliography styles use
full names. IEEEtran.bst will automatically abbreviate when it encounters
full names.
 
 
 
 
references for the IEEEtran.bst documentation
IEEEtran homepage
@electronic{IEEEhowto:IEEEtranpage,
  author        = "Michael Shell",
  title         = "{IEEE}tran Homepage",
  url           = "http://www.michaelshell.org/tex/ieeetran/",
  year          = "2007"
}


the distribution site for IEEEtran.bst
@electronic{IEEEexample:shellCTANpage,
  author        = "Michael Shell",
  title         = "{IEEE}tran Webpage on {CTAN}",
  url           = "http://www.ctan.org/tex-archive/macros/latex/contrib/IEEEtran/",
  year          = "2007"
}


the IEEE website
sort key is needed for sorting styles
@electronic{IEEEexample:IEEEwebsite,
  title         = "The {IEEE} Website",
  url           = "http://www.ieee.org/",
  year          = "2007",
  key           = "IEEE"
}


The BibTeX user's guide.
The filename could have been put in the URL instead. But, there might
be other interesting things for the user in the same directory - and
the filename might change before the directory that contains it.
@electronic{IEEEexample:bibtexuser,
  author        = "Oren Patashnik",
  title         = "{{\BibTeX}}ing",
  howpublished  = "{btxdoc.pdf}",
  url           = "http://www.ctan.org/tex-archive/biblio/bibtex/contrib/doc/",
  month         = feb,
  year          = "1988"
}


The BibTeX style designer's guide.
@electronic{IEEEexample:bibtexdesign,
  author        = "Oren Patashnik",
  title         = "Designing {{\BibTeX}} Styles",
  howpublished  = "{btxhak.pdf}",
  url           = "http://www.ctan.org/tex-archive/biblio/bibtex/contrib/doc/",
  month         = feb,
  year          = "1988"
}


A comprehensive BibTeX tutorial.
@electronic{IEEEexample:tamethebeast,
  author        = "Nicolas Markey",
  title         = "Tame the BeaST  ---  The B to X of {{\BibTeX}}",
  url           = "http://tug.ctan.org/tex-archive/info/bibtex/tamethebeast/",
  month         = oct,
  year          = "2005"
}


The BibTeX Tips and FAQ guide.
@electronic{IEEEexample:bibtexFAQ,
  author        = "David Hoadley and Michael Shell",
  title         = "{{\BibTeX}} Tips and {FAQ}",
  howpublished  = "{btxFAQ.pdf}",
  url           = "http://www.ctan.org/tex-archive/biblio/bibtex/contrib/doc/",
  month         = jan,
  year          = "2007"
}


The TeX FAQ
@electronic{IEEEexample:texfaq,
  author        = "Robin Fairbairns",
  title         = "The {{\TeX}} {FAQ}",
  url           = "http://www.tex.ac.uk/cgi-bin/texfaq2html/",
  month         = jan,
  year          = "2007"
}


A BibTeX Guide via Examples.
@electronic{IEEEexample:bibtexguide,
  author        = "Ki-Joo Kim",
  title         = "A {{\BibTeX}} Guide via Examples",
  howpublished  = "{bibtex\_guide.pdf}",
  url           = "http://www.geocities.com/kijoo2000/",
  month         = apr,
  year          = "2004"
}


TeX User Group Bibliography Archive
@electronic{IEEEexample:beebe_archive,
  author        = "Nelson H. F. Beebe",
  title         = "{{\TeX}} User Group Bibliography Archive",
  url           = "http://www.math.utah.edu:8080/pub/tex/bib/index-table.html",
  month         = aug,
  year          = "2006"
}

The natbib.sty package.
@electronic{ctan:natbib,
  author        = "Patrick W. Daly",
  title         = "The natbib.sty package",
  url           = "http://www.ctan.org/tex-archive/macros/latex/contrib/natbib/",
  month         = sep,
  year          = "2006"
}

The url.sty package.
@electronic{IEEEexample:urlsty,
  author        = "Donald Arseneau",
  title         = "The url.sty Package",
  url           = "http://www.ctan.org/tex-archive/macros/latex/contrib/misc/",
  month         = jun,
  year          = "2005",
}


The hyperref.sty package.
@electronic{IEEEexample:hyperrefsty,
  author        = "Sebastian Rahtz and Heiko Oberdiek",
  title         = "The hyperref.sty Package",
  url           = "http://www.ctan.org/tex-archive/macros/latex/contrib/hyperref/",
  month         = nov,
  year          = "2006",
}


The breakurl.sty package.
@electronic{IEEEexample:breakurl,
  author        = "Vilar Camara Neto",
  title         = "The breakurl.sty Package",
  url           = "http://www.ctan.org/tex-archive/macros/latex/contrib/breakurl/",
  month         = aug,
  year          = "2006",
}


The Babel package.
@electronic{IEEEexample:babel,
  author        = "Johannes Braams",
  title         = "The Babel Package",
  url           = "http://www.ctan.org/tex-archive/macros/latex/required/babel/",
  month         = nov,
  year          = "2005",
}


The multibib package.
@electronic{IEEEexample:multibibsty,
  author        = "Thorsten Hansen",
  title         = "The multibib.sty package",
  url           = "http://www.ctan.org/tex-archive/macros/latex/contrib/multibib/",
  month         = jan,
  year          = "2004"
}


The biblatex package.
@electronic{IEEEexample:biblatex,
  author        = "Philipp Lehman",
  title         = "The biblatex package",
  url           = "http://www.ctan.org/tex-archive/macros/latex/exptl/biblatex/",
  month         = jan,
  year          = "2007"
}



The three most common and typical types of references used in
IEEE publications:

an article in a journal
Note the use of the IEEE_J_EDL string, defined in the IEEEabrv.bib file,
for the journal name. IEEEtran.bst defines the BibTeX standard three
letter month codes per IEEE style.
From the June 2002 issue of "IEEE Transactions on Electron Devices",
page 996, reference #16.
@article{IEEEexample:article_typical,
  author        = "S. Zhang and C. Zhu and J. K. O. Sin and P. K. T. Mok",
  title         = "A Novel Ultrathin Elevated Channel Low-temperature 
                   Poly-{Si} {TFT}",
  journal       = IEEE_J_EDL,
  volume        = "20",
  month         = nov,
  year          = "1999",
  pages         = "569-571"
}


journal article using et al.
The (five) authors are actually: F. Delorme, S. Slempkes, G. Alibert, 
B. Rose, J. Brandon
The month (July) was not given here.
From the September 1998 issue of "IEEE Journal on Selected Areas in
Communications", page 1257, reference #28.
@article{IEEEexample:articleetal,
  author        = "F. Delorme and others",
  title         = "Butt-jointed {DBR} Laser With 15 {nm} Tunability Grown
                   in Three {MOVPE} Steps",
  journal       = "Electron. Lett.",
  volume        = "31",
  number        = "15",
  year          = "1995",
  pages         = "1244-1245"
}


a paper in a conference proceedings
"conference" can be used as an alias for "inproceedings"
From the June 2002 issue of "Journal of Microelectromechanical Systems",
page 205, reference #16.
@inproceedings{IEEEexample:conf_typical,
  author        = "R. K. Gupta and S. D. Senturia",
  title         = "Pull-in Time Dynamics as a Measure of Absolute Pressure",
  booktitle     = "Proc. {IEEE} International Workshop on
                   Microelectromechanical Systems ({MEMS}'97)",
  address       = "Nagoya, Japan",
  month         = jan,
  year          = "1997",
  pages         = "290-294"
}


a book
From the May 2002 issue of "IEEE Transactions on Magnetics",
page 1466, reference #4.
@book{IEEEexample:book_typical,
  author        = "B. D. Cullity",
  title         = "Introduction to Magnetic Materials",
  publisher     = "Addison-Wesley",
  address       = "Reading, MA",
  year          = "1972"
}




Other examples

journal article with large page numbers, IEEE will divide numbers 5 digits
or longer into groups of three with small spaces between them. Page ranges
can be separated via either "-" or "--", IEEEtran.bst will automatically
convert the separator dash(es) to "--".
Authors and/or IEEE do not always provide/use the journal number, but it
was used in this case. IEEEtran.bst can be configured to ignore journal
numbers if desired.
From the August 2000 issue of "IEEE Photonics Technology Letters",
page 1039, reference #11.
@article{IEEEexample:articlelargepages,
  author        = "A. Castaldini and A. Cavallini and B. Fraboni
                   and P. Fernandez and J. Piqueras",
  title         = "Midgap Traps Related to Compensation Processes in
                   {CdTe} Alloys",
  journal       = "Phys. Rev. B.",
  volume        = "56",
  number        = "23",
  year          = "1997",
  pages         = "14897-14900"
}


journal article with dual months 
use the BibTeX "#" concatenation operator
From the March 2002 issue of "IEEE Transactions on Mechatronics",
page 21, reference #8.
@article{IEEEexample:articledualmonths,
  author        = "Y. Okada and K. Dejima and T. Ohishi",
  title         = "Analysis and Comparison of {PM} Synchronous Motor and
                   Induction Motor Type Magnetic Bearings",
  journal       = IEEE_J_IA,
  volume        = "31",
  month         = sep # "/" # oct,
  year          = "1995",
  pages         = "1047-1053"
}


journal article to be published as a misc entry type
date information like month and year is optional 
However, the article form like that below may be a better approach.
From the May 2002 issue of "IEEE Journal of Selected Areas in 
Communication", page 725, reference #3.
@misc{IEEEexample:TBPmisc,
  author        = "M. Coates and A. Hero and R. Nowak and B. Yu",
  title         = "Internet Tomography",
  howpublished  = IEEE_M_SP,
  month         = may,
  year          = "2002",
  note          = "to be published"
}


journal article to be published as an article entry type
year is required, so if absent, use the year field to hold
the "submitted for publication" in order to avoid a warning for
the missing year field.
From the June 2002 issue of "IEEE Transactions on Information Theory",
page 1461, reference #21.
@article{IEEEexample:TBParticle,
  author        = "N. Kahale and R. Urbanke",
  title         = "On the Minimum Distance of Parallel and Serially
                   Concatenated Codes",
  journal       = IEEE_J_IT,
  year          = "submitted for publication"
}





book with editor and no author
From the June 2002 issue of "IEEE Transactions on Information Theory",
page 1725, reference #1.
@book{IEEEexample:bookwitheditor,
  editor        = "J. C. Candy and G. C. Temes",
  title         = "Oversampling Delta-Sigma Data Converters Theory,
                   Design and Simulation",
  publisher     = "{IEEE} Press.",
  address       = "New York",
  year          = "1992"
}


book with edition, author and editor
Note that the standard BibTeX styles do not support book entries with both
author and editor fields, but IEEEtran.bst does.
The standard BibTeX way of specifying the edition is to use capitalized
ordinal words such as "First", "Second", etc. Most .bst files can convert
up to about "Fifth" into the format needed. IEEEtran.bst can convert up
to "Tenth" to the "Arabic ordinal" form IEEE uses (e.g., "10th"). For
editions over the tenth, it is best to use the "Arabic ordinal" form for
IEEE related work (e.g., "101st")
Note how "Jr." has to be entered.
From the May 2002 issue of "Journal of Lightwave Technology", page 856,
reference #17.
@book{IEEEexample:book,
  author        = "S. M. Metev and V. P. Veiko",
  editor        = "Osgood, Jr., R. M.",
  title         = "Laser Assisted Microtechnology",
  edition       = "Second",
  publisher     = "Springer-Verlag",
  address       = "Berlin, Germany",
  year          = "1998"
}


book with series and volume
From the January 2000 issue of "IEEE Transactions on Communications",
page 11, reference #31.
@book{IEEEexample:bookwithseriesvolume,
  editor        = "J. Breckling",
  title         = "The Analysis of Directional Time Series: Applications to
                   Wind Speed and Direction",
  series        = "Lecture Notes in Statistics",
  publisher     = "Springer",
  address       = "Berlin, Germany",
  year          = "1989",
  volume        = "61"
}


inbook with chapter number. The pages field could also have been given.
The chapter number could be changed to something else such as a section
number via the type field: type = "sec.".
From the May 2002 issue of "IEEE Transactions on Circuits and Systems---I: 
Fundamental Applications and Theory", page 638, reference #22.
@inbook{IEEEexample:inbook,
  author        = "H. E. Rose",
  title         = "A Course in Number Theory",
  publisher     = "Oxford Univ. Press",
  address       = "New York, NY",
  year          = "1988",
  chapter       = "3"
}


inbook with pages and note. The language field is not set to Russian
because the title is presented here in its translated, English, form.
From the May 2002 issue of "IEEE Transactions on Magnetics", page 1533,
reference #5.
@inbook{IEEEexample:inbookpagesnote,
  author        = "B. K. Bul",
  title         = "Theory Principles and Design of Magnetic Circuits",
  publisher     = "Energia Press",
  address       = "Moscow",
  year          = "1964",
  pages         = "464",
  note          = "(in Russian)"
}





incollection with author and editor
From the May 2002 issue of "Journal of Lightwave Technology",
page 807, reference #7.
@incollection{IEEEexample:incollection,
  author        = "W. V. Sorin",
  editor        = "D. Derickson",
  title         = "Optical Reflectometry for Component Characterization",
  booktitle     = "Fiber Optic Test and Measurement",
  publisher     = "Prentice-Hall",
  address       = "Englewood Cliffs, NJ",
  year          = "1998"
}


incollection with series
From the April 2000 issue of "IEEE Transactions on Communication",
page 609, reference #3.
@incollection{IEEEexample:incollectionwithseries,
  author        = "J. B. Anderson and K. Tepe",
  title         = "Properties of the Tailbiting {BCJR} Decoder",
  booktitle     = "Codes, Systems and Graphical Models",
  series        = "{IMA} Volumes in Mathematics and Its Applications",
  publisher     = "Springer-Verlag",
  address       = "New York",
  year          = "2000"
  
}


incollection with author, editor, chapter and pages
From the January 2000 issue of "IEEE Transactions on Communications",
page 16, reference #9.
@incollection{IEEEexample:incollection_chpp,
  author        = "P. Hedelin and P. Knagenhjelm and M. Skoglund",
  editor        = "W. B. Kleijn and K. K. Paliwal",
  title         = "Theory for Transmission of Vector Quantization Data",
  booktitle     = "Speech Coding and Synthesis",
  publisher     = "Elsevier Science",
  address       = "Amsterdam, The Netherlands",
  year          = "1995",
  chapter       = "10",
  pages         = "347-396"
}


incollection with a large number of authors, some authors/journals will
use et al. for so many names. IEEEtran.bst can be configured to do this
if desired, or "R. M. A. Dawson and others" can be used instead.
Note that IEEE may not include the publisher for incollection entries -
IEEEtran.bst will not issue a warning if the publisher is missing for
incollections - but other .bst files often will.
From the June 2002 issue of "IEEE Transactions on Electron Devices",
page 996, reference #12.
@incollection{IEEEexample:incollectionmanyauthors,
  author        = "R. M. A. Dawson and Z. Shen and D. A. Furst and
                   S. Connor and J. Hsu and M. G. Kane and R. G. Stewart and
                   A. Ipri and C. N. King and P. J. Green and R. T. Flegal
                   and S. Pearson and W. A. Barrow and E. Dickey and K. Ping
                   and C. W. Tang and S. Van. Slyke and
                   F. Chen and J. Shi and J. C. Sturm and M. H. Lu",
  title         = "Design of an Improved Pixel for a Polysilicon 
                   Active-Matrix Organic {LED} Display",
  booktitle     = "{SID} Tech. Dig.",
  volume        = "29",
  year          = "1998",
  pages         = "11-14"
}





A Motorola data book as a manual
It is somewhat unusual to include the data book part number.
in the title. It might be more correct to put this information
in the howpublished field instead.
From the December 2000 issue of "IEEE Transactions on Communications",
page 1986, reference #10.
@manual{IEEEexample:motmanual,
  title         = "{FLEXChip} Signal Processor ({MC68175/D})",
  organization  = "Motorola",
  year          = "1996"
}


same reference, but using IEEEtran's howpublished extension
@manual{IEEEexample:motmanualhowpub,
  title         = "{FLEXChip} Signal Processor",
  howpublished  = "{MC68175/D}",
  organization  = "Motorola",
  year          = "1996"
}




conference paper with an address and days. Some journals capitalize the
letters in "Globecom", this one did not.
From the May 2002 issue of "IEEE Transactions on Communications",
page 697, reference #12.
@inproceedings{IEEEexample:confwithadddays,
  author        = "M. S. Yee and L. Hanzo",
  title         = "Radial Basis Function Decision Feedback Equaliser
                   Assisted Burst-by-burst Adaptive Modulation",
  booktitle     = "Proc. {IEEE} Globecom '99",
  address       = "Rio de Janeiro, Brazil",
  month         = dec # " 5--9,",
  year          = "1999",
  pages         = "2183-2187"
}


conference paper with volume number. A conference proceedings with a vol
number is a little uncommon, note that the vol number is placed
before the address in the formatted bibliography entry
From the April 2002 issue of "IEEE/ACM Transactions on Networking",
page 181, reference #26.
@inproceedings{IEEEexample:confwithvolume,
  author        = "M. Yajnik and S. B. Moon and J. Kurose and D. Towsley",
  title         = "Measurement and Modeling of the Temporal Dependence in
                   Packet Loss",
  booktitle     = "Proc. {IEEE} {INFOCOM}'99",
  volume        = "1",
  address       = "New York, NY",
  month         = mar,
  year          = "1999",
  pages         = "345-352"
}


conference paper with a paper number, the type field can be used to
override the word "paper", e.g., type = "postdeadline paper". A type
can be given even without a paper  field.
Also, IEEEtran.bst can be configured to ignore paper numbers and types.
From the May 2002 issue of "Journal of Lightwave Technology",
page 807, reference #4.
@inproceedings{IEEEexample:confwithpaper,
  author        = "M. Wegmuller and J. P. von der Weid and P. Oberson
                   and N. Gisin",
  title         = "High Resolution Fiber Distributed Measurements With
                   Coherent {OFDR}",
  booktitle     = "Proc. {ECOC}'00",
  year          = "2000",
  paper         = "11.3.4",
  pages         = "109"
}


conference paper with a postdeadline type paper, the paper field is
optional.
From the August 2000 issue of "IEEE Photonics Technology Letters",
page 1087, reference #12.
@inproceedings{IEEEexample:confwithpapertype,
  author        = "B. Mikkelsen and G. Raybon and R.-J. Essiambre and
                   K. Dreyer and Y. Su. and L. E. Nelson and J. E. Johnson
                   and G. Shtengel and A. Bond and D. G. Moodie and
                   A. D. Ellis",
  title         = "160 {Gbit/s} Single-channel Transmission Over 300 km 
                   Nonzero-dispersion Fiber With Semiconductor Based
                   Transmitter and Demultiplexer",
  booktitle     = "Proc. {ECOC}'99",
  year          = "1999",
  paper         = "2-3",
  type          = "postdeadline paper",
  pages         = "28-29"
}


presented at a conference
intype overrides the default "in" and causes the booktitle not to be
emphasized (rendered in italics).
From the February 2002 issue of "IEEE/ACM Transactions on Networking",
page 163, reference #6.
@inproceedings{IEEEexample:presentedatconf,
  author        = "S. G. Finn and M. M{\'e}dard and R. A. Barry",
  title         = "A Novel Approach to Automatic Protection Switching
                   Using Trees",
  intype        = "presented at the",
  booktitle     = "Proc. Int. Conf. Commun.",
  year          = "1997"
}





master's thesis, often the University name will be abbreviated and the
state or country will be included in the address. The type field can
used to override the default type "Master's thesis"
From the June 2002 issue of "IEEE Transactions on Microelectromechanical
Systems", page 186, reference #11.
@mastersthesis{IEEEexample:masters,
  author        = "Nin C. Loh",
  title         = "High-Resolution Micromachined Interferometric
                   Accelerometer",
  school        = "Massachusetts Institute of Technology",
  address       = "Cambridge",
  year          = "1992"
}


master's thesis with a type field
From the August 2001 issue of "IEEE/ACM Transactions on Networking",
page 391, reference #12.
@mastersthesis{IEEEexample:masterstype,
  author        = "A. Karnik",
  title         = "Performance of {TCP} Congestion Control with Rate
                   Feedback: {TCP/ABR} and Rate Adaptive {TCP/IP}",
  school        = "Indian Institute of Science",
  type          = "M. Eng. thesis",
  address       = "Bangalore, India",
  month         = jan,
  year          = "1999"
}





Ph.D. dissertation with a URL field, the university is abbreviated
From the October 2001 issue of "IEEE/ACM Transactions on Networking",
page 590, reference #11.
@phdthesis{IEEEexample:phdurl,
  author        = "Q. Li",
  title         = "Delay Characterization and Performance Control of
                   Wide-area Networks",
  school        = "Univ. of Delaware",
  address       = "Newark",
  month         = may,
  year          = "2000",
  url           = "http://www.ece.udel.edu/~qli"
}





technical report
From the August 2001 issue of "IEEE/ACM Transactions on Networking",
page 490, reference #15.
@techreport{IEEEexample:techrep,
  author        = "R. Jain and K. K. Ramakrishnan and D. M. Chiu",
  title         = "Congestion Avoidance in Computer Networks with a 
                   Connectionless Network Layer",
  institution   = "Digital Equipment Corporation",
  address       = "MA",
  number        = "DEC-TR-506",
  month         = aug,
  year          = "1987"
}


technical report with type
for those times when "Tech. Rep." needs to be modified
From the February 2001 issue of "IEEE/ACM Transactions on Networking",
page 46, reference #8.
@techreport{IEEEexample:techreptype,
  author        = "J. Padhye and V. Firoiu and D. Towsley",
  title         = "A Stochastic Model of {TCP} {R}eno Congestion Avoidance
                   and Control",
  institution   = "Univ. of Massachusetts",
  address       = "Amherst, MA",
  type          = "CMPSCI Tech. Rep.",
  number        = "99-02",
  year          = "1999"
}


technical report with type
for those times when "Tech. Rep." needs to be modified
This reference did not have an address.
From the January 2000 issue of "IEEE Transactions on Communications",
page 117, reference #6.
@techreport{IEEEexample:techreptypeii,
  author        = "D. Middleton and A. D. Spaulding",
  title         = "A Tutorial Review of Elements of Weak Signal Detection
                   in Non-{G}aussian {EMI} Environments",
  institution   = "National Telecommunications and Information
                   Administration ({NTIA}), U.S. Dept. of Commerce",
  type          = "NTIA Report",
  number        = "86-194",
  month         = may,
  year          = "1986"
}





an unpublished work
for unpublished types, the note field is required. IEEE usually
just uses the word "unpublished" for the note.
From the August 2001 issue of "IEEE/ACM Transactions on Networking",
page 391, reference #16.
@unpublished{IEEEexample:unpublished,
  author        = "T. J. Ott and N. Aggarwal",
  title         = "{TCP} over {ATM}: {ABR} or {UBR}",
  note          = "Unpublished"
}





electronic with a howpublished information field 
From the August 2001 issue of "IEEE/ACM Transactions on Networking",
page 391, reference #7.
@electronic{IEEEexample:electronhowinfo,
  author        = "V. Jacobson",
  title         = "Modified {TCP} Congestion Avoidance Algorithm",
  howpublished  = "end2end-interest mailing list",
  url           = "ftp://ftp.isi.edu/end2end/end2end-interest-1990.mail",
  month         = apr,
  year          = "1990"
}


electronic with a howpublished information field 
From the August 2001 issue of "IEEE/ACM Transactions on Networking",
page 418, reference #31.
@electronic{IEEEexample:electronhowinfo2,
  author        = "V. Valloppillil and K. W. Ross",
  title         = "Cache Array Routing Protocol v1.1",
  howpublished  = "Internet draft",
  url           = "http://ds1.internic.net/internet-drafts/draft-vinod-carp-v1-03.txt",
  year          = "1998"
}


electronic with an organization and address
From the February 2002 issue of "IEEE/ACM Transactions on Networking",
page 114, reference #15.
@electronic{IEEEexample:electronorgadd,
  author        = "D. H. Lorenz and A. Orda",
  title         = "Optimal Partition of {QoS} Requirements on Unicast
                   Paths and Multicast Trees",
  organization  = "Dept. Elect. Eng., Technion",
  address       = "Haifa, Israel",
  url           = "ftp://ftp.technion.ac.il/pub/supported/ee/Network/lor.mopq98.ps",
  month         = jul,
  year          = "1998"
}





U.S. patent
Use the type field to override the patent type. e.g.,
type = "Patent Application"
The address is that of the assignee. Note that IEEE does not
display the assignee, the address, and only displays one date.
(if year is not present, the filed dates are used.) However, this
information should be entered as other BibTeX styles may use it.
alternatively, nationality could be entered as "U.S." 
From the April 2000 issue of "IEEE Transactions on Communications",
page 542, reference #6.
@patent{IEEEexample:uspat,
  author        = "Ronald E. Sorace and Victor S. Reinhardt and
                   Steven A. Vaughn",
  assignee      = "Hughes Aircraft Company",
  address       = "Los Angeles, CA",
  title         = "High-Speed Digital-to-{RF} Converter",
  nationality   = "United States",
  number        = "5668842",
  dayfiled      = "28",
  monthfiled    = feb,
  yearfiled     = "1995",
  day           = "16",
  month         = sep,
  year          = "1997"
}


Japanese Patent
From the April 2000 issue of "IEEE Transactions on Communications",
page 556, reference #6.
@patent{IEEEexample:jppat,
  author        = "U. Hideki",
  title         = "Quadrature Modulation Circuit",
  nationality   = "Japanese",
  number        = "152932/92",
  day           = "20",
  month         = may,
  year          = "1992"
}


French Patent request, the language field must be entered in lower case
as this is the option name Babel uses. The nationality field needs to be
capitalized. Because this is a patent request, the date filed fields are
used while the date fields are left empty/missing. In other countries,
the words "Patent Application", etc. are used instead.
From the April 2000 issue of "IEEE Transactions on Communications",
page 556, reference #9.
@patent{IEEEexample:frenchpatreq,
  author        = "F. Kowalik and M. Isard",
  title         = "Estimateur d'un D{\'e}faut de Fonctionnement 
                   d'un Modulateur en Quadrature et {\'E}tage de Modulation
                   l'Utilisant",
  language      = "french",
  nationality   = "French",
  type          = "Patent Request",
  number        = "9500261",
  dayfiled      = "11",
  monthfiled    = jan,
  yearfiled     = "1995"
}





a periodical
From the April 2001 issue of "IEEE/ACM Transactions on Networking",
page 160, reference #1.
sort key is needed for sorting styles
@periodical{IEEEexample:periodical,
  title         = IEEE_M_PCOM # ", Special Issue on Wireless {ATM}",
  volume        = "3",
  month         = aug,
  year          = "1996",
  key           = "IEEE"
}





standard, IEEE does not use the address for standards, but it is good
to provide one for BibTeX styles that use it.
From the August 2001 issue of "IEEE/ACM Transactions on Networking",
page 451, reference #2.
@standard{IEEEexample:standard,
  title         = "Wireless {LAN} Medium Access Control {(MAC)} and 
                   Physical Layer {(PHY)} Specification",
  organization  = "IEEE",
  address       = "Piscataway, NJ",
  number        = "802.11",
  year          = "1997"
}


standard with type and revision, the type overrides the word standard
(or std.). Here a standard number is not available and a revision number
is used.
From the August 2000 issue of "IEEE Photonics Technology Letters",
page 1048, reference #13.
@standard{IEEEexample:standardproposed,
  title         = "Fiber Channel Physical Interface ({FC-PI})",
  institution   = "NCITS",
  address       = "Washington, DC",
  type          = "Working Draft Proposed Standard",
  revision      = "5.2",
  year          = "1999"
}


standard draft as a misc with author
From the May 2002 issue of "IEEE Journal of Selected Areas in
Communication", page 725, reference #16.
@misc{IEEEexample:draftasmisc,
  author        = "I. Widjaja and A. Elwalid",
  title         = "{MATE}: {MPLS} Adaptive Traffic Engineering",
  howpublished  = "IETF Draft",
  year          = "1999"
}





misc for a techreport like reference
techreport is not perfectly suitable because this entry lacks
an institution field
From the August 2001 issue of "IEEE/ACM Transactions on Networking",
page 490, reference #22.
@misc{IEEEexample:miscforum,
  author        = "L. Roberts",
  title         = "Enhanced Proportional Rate Control Algorithm {PRCA}",
  howpublished  = "{ATM} Forum Contribution 94-0735R1",
  month         = aug,
  year          = "1994"
}


misc for a white paper
From the August 2001 issue of "IEEE/ACM Transactions on Networking",
page 478, reference #4 - Note that the reference there (improperly?)
used the author field for "Cisco".
@misc{IEEEexample:whitepaper,
  title         = "Advanced {QoS} Services for the Intelligent Internet",
  howpublished  = "White Paper",
  organization  = "Cisco",
  month         = may,
  year          = "1997"
}


misc for a data sheet
From the November 2000 issue of "IEEE Photonics Technology Letters",
page 1551, reference #6.
@misc{IEEEexample:datasheet,
  title         = "{PDCA12-70} Data Sheet",
  organization  = "Opto Speed SA",
  address       = "Mezzovico, Switzerland"
}





Other unusual references

a private communication as a misc entry type
sometimes the designation "personal communication" is used instead
From the June 2002 issue of "IEEE Transactions on Information Theory",
page 1725, reference #16.
@misc{IEEEexample:private,
  author        = "S. Konyagin",
  howpublished  = "private communication",
  year          = "1998"
}


an internet request for comments (RFC) as a misc entry type
It would also be nice to add a URL to these types of things.
RFCs can also be handled as electronic references.
From the April 2002 issue of "IEEE/ACM Transactions on Networking",
page 181, reference #14.
@misc{IEEEexample:miscrfc,
  author        = "K. K. Ramakrishnan and S. Floyd",
  title         = "A Proposal to Add Explicit Congestion
                   Notification ({ECN}) to {IP}",
  howpublished  = "RFC 2481",
  month         = jan,
  year          = "1999"
}


a software package as a manual
From the June 2002 issue of "IEEE/ASME Journal of Microelectromechanical
Systems", page 205, reference #20.
Sometimes they put the version/release information in the title.
@manual{IEEEexample:softmanual,
  title         = "SaberDesigner Reference Manual",
  organization  = "Analogy, Inc.",
  address       = "Beaverton, OR",
  year          = "1998",
  note          = "Release 4.3"
}


a software package as an electronic reference
From the February 2003 issue of  "IEEE/ACM Transactions on Networking",
page 46, reference #24. If there is no author or organization, a sorting
key is required for sorting styles. It might be a good idea to include
month and year fields as well.
@electronic{IEEEexample:softonline,
  title         = "Ucb/lbnl/vint Network Simulator---ns (Version 2)",
  url           = "http://www-mash.cs.berkeley.edu/ns/",
  key           = "ns"
}


misc for a German regulation
In German, the first letters of nouns are capitalized, so we do so here.
From the June 2002 issue of "IEEE Journal in Selected Areas in
Communication", page 892, reference #9.
@misc{IEEEexample:miscgermanreg,
  title         = "{M}essung von {S}t{\"o}rfeldern an {A}nlagen 
                   und {L}eitungen der {T}elekommunikation im
                   {F}requenzbereich 9 {kHz} bis 3 {GHz}",
  language      = "german",
  howpublished  = "{M}e{\ss}vorschrift {R}eg {TP} {MV} 05",
  organization  = "Regulierungsbeh{\"o}rde f{\"u}r {T}elekommunikation und
                   {P}ost ({R}eg {TP})"
}



Ways to handle things like CCSDS's Blue Books
journal article with a URL. However, this is not a very good approach
because the Blue Books are not really journals and the author field has
to be abused.
From the June 2002 issue of "IEEE Transactions on Information Theory",
page 1461, reference #7.
@article{IEEEexample:bluebookarticle,
  author        = "{Consulative Committee for Space Data Systems (CCSDS)}",
  title         = "Telemetry Channel Coding",
  journal       = "Blue Book",
  number        = "4",
  year          = "1999",
  url           = "http://www.ccsds.org/documents/pdf/CCSDS-101.0-B-4.pdf"
}


CCSDS's Blue Book handled as a book
However, it is not a good idea to have to use the author field for
an organization (done here because the book entry type requires an
author field).
@book{IEEEexample:bluebookbook,
  author        = "{Consulative Committee for Space Data Systems (CCSDS)}",
  title         = "Telemetry Channel Coding",
  series        = "Blue Book",
  number        = "4",
  publisher     = "{CCSDS}",
  address       = "Newport Beach, {CA}",
  year          = "1999",
  url           = "http://www.ccsds.org/documents/pdf/CCSDS-101.0-B-4.pdf"
}


CCSDS's Blue Book handled as a manual
This is a much better approach, but uses the howpublished field.
@manual{IEEEexample:bluebookmanual,
  title         = "Telemetry Channel Coding",
  howpublished  = "ser. Blue Book, No. 4",
  organization  = "Consulative Committee for Space Data Systems (CCSDS)",
  address       = "Newport Beach, CA",
  year          = "1999",
  url           = "http://www.ccsds.org/documents/pdf/CCSDS-101.0-B-4.pdf"
}



CCSDS's Blue Book handled as a standard
Probably the best approach for this particular case because the work
is standard related. Note that IEEE does not display the address for
standards.
@standard{IEEEexample:bluebookstandard,
  title         = "Telemetry Channel Coding",
  howpublished  = "ser. Blue Book, No. 4",
  organization  = "Consulative Committee for Space Data Systems (CCSDS)",
  address       = "Newport Beach, CA",
  type          = "Recommendation for Space Data System Standard",
  number        = "101.0-B-4",
  month         = May,
  year          = "1999",
  url           = "http://www.ccsds.org/documents/pdf/CCSDS-101.0-B-4.pdf"
}








An example of a IEEEtran control entry which can change some IEEEtran.bst
settings. An entry like this must be cited via \bstctlcite{} command
before the first real \cite{}. The same entry key cannot be called twice
(just like multiple \cite{} of the same entry key place only one entry
in the bibliography.)
The available control fields are:

CTLuse_article_number
"no" turns off the display of the number for articles.
"yes" enables

CTLuse_paper
"no" turns off the display of the paper and type fields in inproceedings.
"yes" enables

CTLuse_forced_etal 
"no" turns off the forced use of "et al."
"yes" enables

CTLmax_names_forced_etal
The maximum number of names that can be present beyond which an "et al."
usage is forced. Be sure that CTLnames_show_etal (below)
is not greater than this value!

CTLnames_show_etal
The number of names that will be shown with a forced "et al.".
Must be less than or equal to CTLmax_names_forced_etal

CTLuse_alt_spacing 
"no" turns off the alternate interword spacing for entries with URLs.
"yes" enables

CTLalt_stretch_factor
If alternate interword spacing for entries with URLs is enabled, this is
the interword spacing stretch factor that will be used. For example, the
default "4" here means that the interword spacing in entries with URLs can
stretch to four times normal. Does not have to be an integer.

CTLdash_repeated_names
"no" turns off the "dashification" of repeated (i.e., identical to those
of the previous entry) names. IEEE normally does this.
"yes" enables

CTLname_format_string
The name format control string as explained in the BibTeX style hacking
guide.
IEEE style "{f.~}{vv~}{ll}{, jj}" is the default,

CTLname_latex_cmd
A LaTeX command that each name will be fed to (e.g., "\textsc").
Leave empty if no special font is desired for the names.
The default is empty.

CTLname_url_prefix
The prefix text used before URLs.
The default is "[Online]. Available:" A space will be inserted after this
text. If this space is not wanted, just use \relax at the end of the
prefix text.


Those fields that are not to be changed can be left out.
@IEEEtranBSTCTL{IEEEexample:BSTcontrol,
  CTLuse_article_number     = "yes",
  CTLuse_paper              = "yes",
  CTLuse_forced_etal        = "no",
  CTLmax_names_forced_etal  = "10",
  CTLnames_show_etal        = "1",
  CTLuse_alt_spacing        = "yes",
  CTLalt_stretch_factor     = "4",
  CTLdash_repeated_names    = "yes",
  CTLname_format_string     = "{f.~}{vv~}{ll}{, jj}",
  CTLname_latex_cmd         = "",
  CTLname_url_prefix        = "[Online]. Available:"
}



@online{google-search-statistics,
	Author = {Maryam Mohsin},
	title = {10 Google Search Statistics You Need to Know in 2023 {\textbar} Oberlo},
	url = {https://www.oberlo.com/blog/google-search-statistics},
	year = {2023},
}


@techreport{Lee:EECS-2006-1,
	Author = {Lee, Edward A.},
	Title = {The Problem with Threads},
	Institution = {EECS Department, University of California, Berkeley},
	Year = {2006},
	Month = {Jan},
	URL = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/2006/EECS-2006-1.html},
	Number = {UCB/EECS-2006-1},
	Note = {The published version of this paper is in IEEE Computer 39(5):33-42, May 2006.},
	Abstract = {Threads are a seemingly straightforward adaptation of the dominant sequential model of computation to concurrent systems. Languages require little or no syntactic changes to support threads, and operating systems and architectures have evolved to efficiently support them. Many technologists are pushing for increased use of multithreading in software in order to take advantage of the predicted increases in parallelism in computer architectures. In this paper, I argue that this is not a good idea. Although threads seem to be a small step from sequential computation, in fact, they represent a huge step. They discard the most essential and appealing properties of sequential computation: understandability, predictability, and determinism. Threads, as a model of computation, are wildly nondeterministic, and the job of the programmer becomes one of pruning that nondeterminism. Although many research techniques improve the model by offering more effective pruning, I argue that this is approaching the problem backwards. Rather than pruning nondeterminism, we should build from essentially deterministic, composable components. Nondeterminism should be explicitly and judiciously introduced where needed, rather than removed where not needed. The consequences of this principle are profound. I argue for the development of concurrent coordination languages based on sound, composable formalisms. I believe that such languages will yield much more reliable, and more concurrent programs.}
}

@inproceedings{Gammo2004ComparingAE,
	title={Comparing and Evaluating epoll, select, and poll Event Mechanisms},
	author={Louay Gammo and Tim Brecht and Amol Shukla and David Pariag},
	year={2004},
	url={https://api.semanticscholar.org/CorpusID:8488207}
}

@online{alvinashcraft_io_2022,
	title = {I/O Completion Ports - Win32 apps},
	url = {https://learn.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports},
	abstract = {I/O completion ports provide an efficient threading model for processing multiple asynchronous I/O requests on a multiprocessor system.},
	author = {alvinashcraft},
	date = {2022-08-08},
	year = {2022},
	langid = {english},
}

@online{io_uring,
	title = {Welcome to Lord of the io\_uring — Lord of the io\_uring documentation},
	url = {https://unixism.net/loti/index.html},
	author={Shuveb Hussain},
	year = {2020},
}

@article{jones2006boost,
	author       = {Jones, M. T.},
	title        = {Boost application performance using asynchronous I/O},
	journal      = {IBM Developer},
	year         = {2006},
	url          = {https://developer.ibm.com/articles/l-async/#:~:text=Summary,CPU%20resources%20available%20to%20you}
}

@article{li2021pm,
	title={Pm-aio: An effective asynchronous i/o system for persistent memory},
	author={Li, Dingding and Zhang, Niyang and Dong, Mianxiong and Chen, Hao and Ota, Kaoru and Tang, Yong},
	journal={IEEE Transactions on Emerging Topics in Computing},
	volume={10},
	number={3},
	pages={1558--1574},
	year={2021},
	publisher={IEEE}
}

@article{li_combining_2007,
	title = {Combining events and threads for scalable network services implementation and evaluation of monadic, application-level concurrency primitives},
	volume = {42},
	issn = {0362-1340, 1558-1160},
	url = {https://dl.acm.org/doi/10.1145/1273442.1250756},
	doi = {10.1145/1273442.1250756},
	abstract = {This paper proposes to combine two seemingly opposed programming models for building massively concurrent network services: the event-driven model and the multithreaded model. The result is a hybrid design that offers the best of both worlds--the ease of use and expressiveness of threads and the flexibility and performance of events.
	
	This paper shows how the hybrid model can be implemented entirely at the application level using
	concurrency monads
	in Haskell, which provides type-safe abstractions for both events and threads. This approach simplifies the development of massively concurrent software in a way that scales to real-world network services. The Haskell implementation supports exceptions, symmetrical multiprocessing, software transactional memory, asynchronous I/O mechanisms and application-level network protocol stacks. Experimental results demonstrate that this monad-based approach has good performance: the threads are extremely lightweight (scaling to ten million threads), and the I/O performance compares favorably to that of Linux {NPTL}. tens of thousands of simultaneous, mostly-idle client connections. Such massively-concurrent programs are difficult to implement, especially when other requirements, such as high performance and strong security, must also be met.},
	pages = {189--199},
	number = {6},
	journaltitle = {{ACM} {SIGPLAN} Notices},
	shortjournal = {{SIGPLAN} Not.},
	author = {Li, Peng and Zdancewic, Steve},
	date = {2007-06-10},
	year = {2007},
	langid = {english},
}

@inproceedings{howell_cooperative_2002,
	title = {Cooperative Task Management without Manual Stack Management},
	url = {https://www.microsoft.com/en-us/research/publication/cooperative-task-management-without-manual-stack-management/},
	abstract = {Cooperative task management can provide program architects with ease of reasoning about concurrency issues. This property is often espoused by those who recommend "event-driven" programming over "multi-threaded" programming. Those terms conflate several issues. In this paper, we clarify the issues, and show how one can get the best of both worlds: reason more simply about concurrency in the way "event-driven" advocates recommend, while preserving the readability and maintainability of code associated with "multithreaded" programming. We identify the source of confusion about the two programming styles as a conflation of two concepts: task management and stack management. Those two concerns define a two-axis space in which "multithreaded" and "event-driven" programming are diagonally opposite; there is a third "sweet spot" in the space that combines the advantages of both programming styles. We point out pitfalls in both alternative forms of stack management, manual and automatic, and we supply techniques that mitigate the danger in the automatic case. Finally, we exhibit adaptors that enable automatic stack management code and manual stack management code to interoperate in the same code base.},
	booktitle = {Proceedings of {USENIX} 2002 Annual Technical Conference},
	publisher = {{USENIX}},
	author = {Howell, Jon and Bolosky, Bill and Douceur, John ({JD})},
	date = {2002-01},
	year = {2002},
	note = {Edition: Proceedings of {USENIX} 2002 Annual Technical Conference},
}

@inproceedings{narayanan2019lxds,
	title={LXDs: Towards Isolation of Kernel Subsystems.},
	author={Narayanan, Vikram and Balasubramanian, Abhiram and Jacobsen, Charlie and Spall, Sarah and Bauer, Scotty and Quigley, Michael and Hussain, Aftab and Younis, Abdullah and Shen, Junjie and Bhattacharyya, Moinak and others},
	booktitle={USENIX Annual Technical Conference},
	pages={269--284},
	year={2019}
}

@article{lin2016memif,
	title={Memif: Towards programming heterogeneous memory asynchronously},
	author={Lin, Felix Xiaozhu and Liu, Xu},
	journal={ACM SIGPLAN Notices},
	volume={51},
	number={4},
	pages={369--383},
	year={2016},
	publisher={ACM New York, NY, USA}
}

@inproceedings{lee2019asynchronous,
	title={Asynchronous I/O Stack: A Low-latency Kernel I/O Stack for Ultra-Low Latency SSDs.},
	author={Lee, Gyusun and Shin, Seokha and Song, Wonsuk and Ham, Tae Jun and Lee, Jae W and Jeong, Jinkyu},
	booktitle={USENIX Annual Technical Conference},
	pages={603--616},
	year={2019}
}

@article{luo_depfast_nodate,
	title = {{DepFast}: Orchestrating Code of Quorum Systems},
	abstract = {Quorum systems (e.g., replicated state machines) are critical distributed systems. Building correct, high-performance quorum systems is known to be hard. A major reason is that the protocols in quorum systems lead to non-deterministic state changes and complex branching conditions based on different events (e.g., timeouts). Traditionally, these systems are built with an asynchronous coding style with event-driven callbacks, but often lead to “callback hell” that makes code hard to follow and maintain. Converting to synchronous coding styles (e.g., using coroutines) is challenging because of the complex branching conditions. In this paper, we present Dependably Fast ({DepFast}), an effective, expressive framework for developing quorum systems. {DepFast} provides a unique {QuorumEvent} abstraction to enable building quorum systems in a synchronous style. It also supports composition of multiple events, e.g., timeouts, different quorums. To evaluate {DepFast}, we use it to implement two quorum systems, Raft and Copilot. We show that complex quorum systems implemented by {DepFast} are easy to write and have high performance. Speciﬁcally, it takes 25\%–35\% fewer lines of code to implement Raft and Copilot using {DepFast}, and the {DepFastbased} implementations have comparable performance with the state-of-the-art systems.},
	author = {Luo, Xuhao and Shen, Weihai and Mu, Shuai and Xu, Tianyin},
	langid = {english},
	year = {2022},
}

@article{von_behren_capriccio_2003,
	title = {Capriccio: scalable threads for internet services},
	volume = {37},
	issn = {0163-5980},
	url = {https://doi.org/10.1145/1165389.945471},
	doi = {10.1145/1165389.945471},
	shorttitle = {Capriccio},
	abstract = {This paper presents Capriccio, a scalable thread package for use with high-concurrency servers. While recent work has advocated event-based systems, we believe that thread-based systems can provide a simpler programming model that achieves equivalent or superior performance.By implementing Capriccio as a user-level thread package, we have decoupled the thread package implementation from the underlying operating system. As a result, we can take advantage of cooperative threading, new asynchronous I/O mechanisms, and compiler support. Using this approach, we are able to provide three key features: (1) scalability to 100,000 threads, (2) efficient stack management, and (3) resource-aware scheduling.We introduce linked stack management, which minimizes the amount of wasted stack space by providing safe, small, and non-contiguous stacks that can grow or shrink at run time. A compiler analysis makes our stack implementation efficient and sound. We also present resource-aware scheduling, which allows thread scheduling and admission control to adapt to the system's current resource usage. This technique uses a blocking graph that is automatically derived from the application to describe the flow of control between blocking points in a cooperative thread package. We have applied our techniques to the Apache 2.0.44 web server, demonstrating that we can achieve high performance and scalability despite using a simple threaded programming model.},
	pages = {268--281},
	number = {5},
	journaltitle = {{ACM} {SIGOPS} Operating Systems Review},
	shortjournal = {{SIGOPS} Oper. Syst. Rev.},
	author = {von Behren, Rob and Condit, Jeremy and Zhou, Feng and Necula, George C. and Brewer, Eric},
	urldate = {2023-10-25},
	date = {2003-10-19},
	year = {2003},
	keywords = {blocking graph, dynamic stack growth, linked stack management, resource-aware scheduling, user-level threads},
}

@online{C++20-coroutine,
	title = {My tutorial and take on C++20 coroutines},
	url = {https://www.scs.stanford.edu/~dm/blog/c++-coroutines.html},
	year = {2021},
	author = {David Mazières},
}

@article{goroutines,
	title={Coordinating Goroutines},
	author={Adam Freeman},
	journal={Pro Go},
	issue={},
	pages={811-835},
	year={2022},
}

@phdthesis{rosendahl2017green,
	title={Green threads in rust},
	author={Rosendahl, Kevin},
	year={2017},
	school={Master’s thesis, Stanford University, Computer Science Department}
}

@inproceedings{python-coroutine,
	title={Asynchronous programming with Coroutines in Python},
	author={Ewoud Van Craeynest},
	booktitle={FOSDEM 2017},
	year={2017},
}

@inproceedings{kotlin-coroutines,
	title={Kotlin coroutines: design and implementation},
	author={Roman Elizarov;Mikhail Belyaev;Marat Akhin;Ilmir Usmanov},
	booktitle={Onward! 2021: Proceedings of the 2021 ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software},
	year={2021},
}

@online{kpti,
	title = {{KAISER}: hiding the kernel from user space [{LWN}.net]},
	url = {https://lwn.net/Articles/738975/},
	year = {2017},
	author = {Jonathan Corbet},
}


@online{callbackhell,
	title = {Callbacks in {JavaScript} {\textbar} Zell Liew},
	url = {https://zellwk.com/blog/callbacks/},
	abstract = {Have you come across the term "callback" but don't know what it means? Don't worry, you're not alone. Many newcomers to {JavaScript} find callbacks hard to understand too.
	Although callbacks can be confusing, you still need to learn them thoroughly as they form a critical concept in {JavaScript}. You can't get very far without knowing callbacks ��.
	That's what today's article is for! You'll learn what callbacks are, why they're important, and how to use them. ��},
	year={2017},
	author = {Zell Liew},
	date = {2017-06-07},
	langid = {english},
}

@article{waterman_volume_nodate,
	title = {Volume I: Unprivileged {ISA}},
	author = {Waterman, Andrew and Asanovic, Krste and Division, {CS}},
	langid = {english},
	year = {2019},
}

@techreport{rocket-chip,
	Author = {Asanović, Krste and Avizienis, Rimas and Bachrach, Jonathan and Beamer, Scott and Biancolin, David and Celio, Christopher and Cook, Henry and Dabbelt, Daniel and Hauser, John and Izraelevitz, Adam and Karandikar, Sagar and Keller, Ben and Kim, Donggyu and Koenig, John and Lee, Yunsup and Love, Eric and Maas, Martin and Magyar, Albert and Mao, Howard and Moreto, Miquel and Ou, Albert and Patterson, David A. and Richards, Brian and Schmidt, Colin and Twigg, Stephen and Vo, Huy and Waterman, Andrew},
	Title = {The Rocket Chip Generator},
	Institution = {EECS Department, University of California, Berkeley},
	Year = {2016},
	Month = {Apr},
	URL = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-17.html},
	Number = {UCB/EECS-2016-17},
	Abstract = {Rocket Chip is an open-source Sysem-on-Chip design generator that emits synthesizable RTL. It leverages the Chisel hardware construction language to compose a library of sophisticated generators for cores, caches, and interconnects into an integrated SoC. Rocket Chip generates general-purpose processor cores that use the open RISC-V ISA, and provides both an in-order core generator (Rocket) and an out-of-order core generator (BOOM). For SoC designers interested in utilizing heterogeneous specialization for added efficiency gains, Rocket Chip supports the integration of custom accelerators in the form of instruction set extensions, coprocessors, or fully independent novel cores. Rocket Chip has been taped out (manufactured) eleven times, and yielded functional silicon prototypes capable of booting Linux.}
}

@online{michael_kerrisk_vdso7_2023,
	title = {vdso(7) - Linux manual page},
	url = {https://man7.org/linux/man-pages/man7/vdso.7.html},
	author = {Michael Kerrisk},
	urldate = {2023-10-28},
	date = {2023-06-24},
}

@misc{rcore-os/rCore-Tutorial-v3,
	author = {rcore-os},
	title = {rCore-Tutorial-v3},
	year = {2023},
	howpublished = {\url{https://github.com/rcore-os/rCore-Tutorial-v3}},
}

@online{smoltcp,
	author = {smoltcp-rs},
	title = {smoltcp},
	year = {2023},
	url = {https://github.com/smoltcp-rs/smoltcp}
}

@online{axi-eth,
	title = {{AXI} 1G/2.5G Ethernet Subsystem v7.2 Product Guide},
	url = {https://docs.xilinx.com/r/en-US/pg138-axi-ethernet},
	urldate = {2023-11-01},
	year = {2023},
}

@online{zynq,
	title = {Zynq {UltraScale}+ {MPSoC} Data Sheet: Overview ({DS}891)},
	year = {2022},
	url = {https://docs.xilinx.com/api/khub/documents/sbPbXcMUiRSJ2O5STvuGNQ/content},
}


@inproceedings{zhang_demikernel_2021,
	address = {New York, NY, USA},
	series = {{SOSP} '21},
	title = {The {Demikernel} {Datapath} {OS} {Architecture} for {Microsecond}-scale {Datacenter} {Systems}},
	isbn = {978-1-4503-8709-5},
	url = {https://dl.acm.org/doi/10.1145/3477132.3483569},
	doi = {10.1145/3477132.3483569},
	abstract = {Datacenter systems and I/O devices now run at single-digit microsecond latencies, requiring ns-scale operating systems. Traditional kernel-based operating systems impose an unaffordable overhead, so recent kernel-bypass OSes [73] and libraries [23] eliminate the OS kernel from the I/O datapath. However, none of these systems offer a general-purpose datapath OS replacement that meet the needs of μs-scale systems.' AB@This paper proposes Demikernel, a flexible datapath OS and architecture designed for heterogenous kernel-bypass devices and μs-scale datacenter systems. We build two prototype Demikernel OSes and show that minimal effort is needed to port existing μs-scale systems. Once ported, Demikernel lets applications run across heterogenous kernel-bypass devices with ns-scale overheads and no code changes.},
	urldate = {2023-11-03},
	booktitle = {Proceedings of the {ACM} {SIGOPS} 28th {Symposium} on {Operating} {Systems} {Principles}},
	publisher = {Association for Computing Machinery},
	author = {Zhang, Irene and Raybuck, Amanda and Patel, Pratyush and Olynyk, Kirk and Nelson, Jacob and Leija, Omar S. Navarro and Martinez, Ashlie and Liu, Jing and Simpson, Anna Kornfeld and Jayakar, Sujay and Penna, Pedro Henrique and Demoulin, Max and Choudhury, Piali and Badam, Anirudh},
	month = oct,
	year = {2021},
	keywords = {operating system, datacenters, kernel bypass},
	pages = {195--211},
	file = {Full Text PDF:/home/zfl/Zotero/storage/MCLQFU22/Zhang 等 - 2021 - The Demikernel Datapath OS Architecture for Micros.pdf:application/pdf},
}

@misc{embassy,
	title = {embassy-rs/embassy: {Modern} embedded framework, using {Rust} and async.},
	url = {https://github.com/embassy-rs/embassy},
	urldate = {2024-01-04},
	year = {2023},
	file = {embassy-rs/embassy\: Modern embedded framework, using Rust and async.:/home/zfl/Zotero/storage/PW4BIT22/embassy.html:text/html},
}
